{"ast":null,"code":"var _jsxFileName = \"C:\\\\MTG\\\\mtg-pdf-printer\\\\mtg-pdf-printer\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DeckInput from './components/DeckInput';\nimport CardGrid from './components/CardGrid';\nimport { parseDecklist, fetchMultipleCards, fetchAllPrintings } from './utils/scryfall';\nimport { generatePDF, downloadPDF } from './utils/pdfGenerator';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [generatingPDF, setGeneratingPDF] = useState(false);\n  const [errors, setErrors] = useState([]);\n  const [success, setSuccess] = useState('');\n  const [selectedPaperSize, setSelectedPaperSize] = useState('letter');\n  const [scale, setScale] = useState(100);\n  const [cropMarks, setCropMarks] = useState(true);\n  const [cutLines, setCutLines] = useState(false);\n  const [skipBasicLands, setSkipBasicLands] = useState(false);\n\n  // Track selected printing for each card (by index)\n  const [selectedPrintings, setSelectedPrintings] = useState({});\n\n  // Paper size options\n  const paperSizes = [{\n    value: 'letter',\n    label: 'Letter (8.5x11.0 in)',\n    width: 8.5,\n    height: 11.0\n  }, {\n    value: 'legal',\n    label: 'Legal (8.5x14.0 in)',\n    width: 8.5,\n    height: 14.0\n  }, {\n    value: 'a4',\n    label: 'A4 (8.27x11.69 in)',\n    width: 8.27,\n    height: 11.69\n  }, {\n    value: 'a3',\n    label: 'A3 (11.69x16.54 in)',\n    width: 11.69,\n    height: 16.54\n  }, {\n    value: 'tabloid',\n    label: 'Tabloid (11x17 in)',\n    width: 11,\n    height: 17\n  }];\n  const handleDeckSubmit = async decklistText => {\n    setLoading(true);\n    setErrors([]);\n    setSuccess('');\n    setCards([]);\n    setSelectedPrintings({});\n    try {\n      // Parse the decklist\n      const parsedCards = parseDecklist(decklistText);\n      if (parsedCards.length === 0) {\n        setErrors(['No valid cards found in the decklist. Please check the format.']);\n        setLoading(false);\n        return;\n      }\n\n      // Fetch card data from Scryfall\n      const {\n        results,\n        errors: fetchErrors\n      } = await fetchMultipleCards(parsedCards);\n      if (results.length === 0) {\n        setErrors(['No cards could be found. Please check the card names and try again.']);\n        setLoading(false);\n        return;\n      }\n\n      // For each card, fetch all printings and set up the card object\n      const cardsWithPrintings = await Promise.all(results.map(async (card, idx) => {\n        let printings = [];\n        try {\n          if (card.prints_search_uri) {\n            printings = await fetchAllPrintings(card.prints_search_uri);\n          }\n        } catch (e) {\n          printings = [];\n        }\n        // Default to the originally loaded card\n        const selectedPrinting = printings.find(p => p.set_name === card.set && p.collector_number === card.collectorNumber) || printings[0];\n        const cardWithPrintings = {\n          ...card,\n          printings: printings.map(p => {\n            var _p$image_uris, _p$card_faces, _p$card_faces$, _p$card_faces$$image_;\n            return {\n              id: p.id,\n              set_name: p.set_name,\n              collector_number: p.collector_number,\n              released_at: p.released_at,\n              imageUrl: ((_p$image_uris = p.image_uris) === null || _p$image_uris === void 0 ? void 0 : _p$image_uris.png) || ((_p$card_faces = p.card_faces) === null || _p$card_faces === void 0 ? void 0 : (_p$card_faces$ = _p$card_faces[0]) === null || _p$card_faces$ === void 0 ? void 0 : (_p$card_faces$$image_ = _p$card_faces$.image_uris) === null || _p$card_faces$$image_ === void 0 ? void 0 : _p$card_faces$$image_.png)\n            };\n          }),\n          selectedPrintingId: selectedPrinting ? selectedPrinting.id : null\n        };\n        console.log('Card with printings:', cardWithPrintings.name, 'printings:', cardWithPrintings.printings.length, cardWithPrintings.printings[0]);\n        return cardWithPrintings;\n      }));\n\n      // Proxy the image URLs for the selected printing\n      const proxiedCards = cardsWithPrintings.map(card => {\n        const selected = card.printings.find(p => p.id === card.selectedPrintingId) || card.printings[0];\n        return {\n          ...card,\n          imageUrl: selected && selected.imageUrl ? `http://localhost:4000/proxy?url=${encodeURIComponent(selected.imageUrl)}` : card.imageUrl\n        };\n      });\n      setCards(proxiedCards);\n      if (fetchErrors.length > 0) {\n        setErrors(fetchErrors);\n      } else {\n        setSuccess(`Successfully loaded ${results.length} cards!`);\n      }\n    } catch (error) {\n      setErrors([`Error loading cards: ${error.message}`]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handler for when a user selects a different printing\n  const handleSelectPrinting = (cardIdx, printingId) => {\n    setCards(prevCards => prevCards.map((card, idx) => {\n      if (idx !== cardIdx) return card;\n      const selected = card.printings.find(p => p.id === printingId) || card.printings[0];\n      return {\n        ...card,\n        selectedPrintingId: selected.id,\n        imageUrl: selected && selected.imageUrl ? `http://localhost:4000/proxy?url=${encodeURIComponent(selected.imageUrl)}` : card.imageUrl\n      };\n    }));\n  };\n  const handleGeneratePDF = async () => {\n    if (cards.length === 0) {\n      setErrors(['No cards to generate PDF for. Please load a decklist first.']);\n      return;\n    }\n    setGeneratingPDF(true);\n    setErrors([]);\n    setSuccess('');\n    try {\n      // Find the selected paper size object\n      const paper = paperSizes.find(p => p.value === selectedPaperSize) || paperSizes[0];\n      // Pass paper size and scale to generatePDF\n      const pdfBytes = await generatePDF(cards, paper, scale);\n      downloadPDF(pdfBytes, 'mtg-deck.pdf');\n      setSuccess('PDF generated and downloaded successfully!');\n    } catch (error) {\n      setErrors([`Error generating PDF: ${error.message}`]);\n    } finally {\n      setGeneratingPDF(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"app-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"MTG PDF Printer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Generate print-ready PDFs from Magic: The Gathering decklists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(DeckInput, {\n          onDeckSubmit: handleDeckSubmit,\n          loading: loading,\n          onGeneratePDF: handleGeneratePDF,\n          generatingPDF: generatingPDF,\n          canGeneratePDF: cards.length > 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle-section\",\n          style: {\n            marginTop: 16,\n            marginBottom: 8,\n            textAlign: 'center',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            gap: 32\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 8,\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 600\n              },\n              children: \"Crop marks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => setCropMarks(v => !v),\n              style: {\n                width: 40,\n                height: 22,\n                borderRadius: 22,\n                background: cropMarks ? '#8bc34a' : '#bbb',\n                position: 'relative',\n                transition: 'background 0.2s',\n                display: 'inline-block',\n                verticalAlign: 'middle',\n                cursor: 'pointer'\n              },\n              tabIndex: 0,\n              role: \"switch\",\n              \"aria-checked\": cropMarks,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: 18,\n                  height: 18,\n                  borderRadius: '50%',\n                  background: '#fff',\n                  position: 'absolute',\n                  top: 2,\n                  left: cropMarks ? 20 : 2,\n                  transition: 'left 0.2s',\n                  boxShadow: '0 1px 4px rgba(0,0,0,0.15)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 8,\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 600\n              },\n              children: \"Cut lines\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => setCutLines(v => !v),\n              style: {\n                width: 40,\n                height: 22,\n                borderRadius: 22,\n                background: cutLines ? '#8bc34a' : '#bbb',\n                position: 'relative',\n                transition: 'background 0.2s',\n                display: 'inline-block',\n                verticalAlign: 'middle',\n                cursor: 'pointer'\n              },\n              tabIndex: 0,\n              role: \"switch\",\n              \"aria-checked\": cutLines,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: 18,\n                  height: 18,\n                  borderRadius: '50%',\n                  background: '#fff',\n                  position: 'absolute',\n                  top: 2,\n                  left: cutLines ? 20 : 2,\n                  transition: 'left 0.2s',\n                  boxShadow: '0 1px 4px rgba(0,0,0,0.15)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 8,\n              cursor: 'pointer'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 600\n              },\n              children: \"Skip basic lands\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => setSkipBasicLands(v => !v),\n              style: {\n                width: 40,\n                height: 22,\n                borderRadius: 22,\n                background: skipBasicLands ? '#8bc34a' : '#bbb',\n                position: 'relative',\n                transition: 'background 0.2s',\n                display: 'inline-block',\n                verticalAlign: 'middle',\n                cursor: 'pointer'\n              },\n              tabIndex: 0,\n              role: \"switch\",\n              \"aria-checked\": skipBasicLands,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: 18,\n                  height: 18,\n                  borderRadius: '50%',\n                  background: '#fff',\n                  position: 'absolute',\n                  top: 2,\n                  left: skipBasicLands ? 20 : 2,\n                  transition: 'left 0.2s',\n                  boxShadow: '0 1px 4px rgba(0,0,0,0.15)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paper-size-section\",\n          style: {\n            marginTop: 16,\n            marginBottom: 16,\n            textAlign: 'center',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            gap: 16\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"paper-size-select\",\n            style: {\n              fontWeight: 600,\n              marginRight: 8\n            },\n            children: \"Paper Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"paper-size-select\",\n            value: selectedPaperSize,\n            onChange: e => setSelectedPaperSize(e.target.value),\n            style: {\n              padding: '4px 12px',\n              borderRadius: 6,\n              border: '1px solid #ccc',\n              fontSize: 16\n            },\n            children: paperSizes.map(size => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: size.value,\n              children: size.label\n            }, size.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"scale-input\",\n            style: {\n              fontWeight: 600,\n              marginLeft: 24,\n              marginRight: 8\n            },\n            children: \"Scale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"scale-input\",\n            type: \"number\",\n            min: 90,\n            max: 110,\n            step: 1,\n            value: scale,\n            onChange: e => setScale(Number(e.target.value)),\n            style: {\n              width: 70,\n              padding: '4px 8px',\n              borderRadius: 6,\n              border: '1px solid #ccc',\n              fontSize: 16\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: 4\n            },\n            children: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), errors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Errors:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), errors.map((error, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), cards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Card Preview (3x3 Grid)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardGrid, {\n            cards: cards,\n            loading: loading,\n            onSelectPrinting: handleSelectPrinting\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pdf-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              onClick: handleGeneratePDF,\n              disabled: generatingPDF || cards.length === 0,\n              children: generatingPDF ? 'Generating PDF...' : 'Generate PDF'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pdf-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\u2022 Print-ready PDF with 9 cards per page\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\u2022 Standard card size (2.5\\\" x 3.5\\\")\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\u2022 Minimal margins for optimal printing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\u2022 No watermarks or branding\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"app-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\xA9 2024 MTG PDF Printer. Made with \\u2764\\uFE0F for Magic players.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"coffee-button\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://www.buymeacoffee.com/gOZTM9e\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee&emoji=&slug=gOZTM9e&button_colour=FFDD00&font_colour=000000&font_family=Poppins&outline_colour=000000&coffee_colour=ffffff\",\n                alt: \"Buy me a coffee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ICAG3ujUgubSvUk9G8FP3CijTKY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","DeckInput","CardGrid","parseDecklist","fetchMultipleCards","fetchAllPrintings","generatePDF","downloadPDF","jsxDEV","_jsxDEV","App","_s","cards","setCards","loading","setLoading","generatingPDF","setGeneratingPDF","errors","setErrors","success","setSuccess","selectedPaperSize","setSelectedPaperSize","scale","setScale","cropMarks","setCropMarks","cutLines","setCutLines","skipBasicLands","setSkipBasicLands","selectedPrintings","setSelectedPrintings","paperSizes","value","label","width","height","handleDeckSubmit","decklistText","parsedCards","length","results","fetchErrors","cardsWithPrintings","Promise","all","map","card","idx","printings","prints_search_uri","e","selectedPrinting","find","p","set_name","set","collector_number","collectorNumber","cardWithPrintings","_p$image_uris","_p$card_faces","_p$card_faces$","_p$card_faces$$image_","id","released_at","imageUrl","image_uris","png","card_faces","selectedPrintingId","console","log","name","proxiedCards","selected","encodeURIComponent","error","message","handleSelectPrinting","cardIdx","printingId","prevCards","handleGeneratePDF","paper","pdfBytes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDeckSubmit","onGeneratePDF","canGeneratePDF","style","marginTop","marginBottom","textAlign","display","alignItems","justifyContent","gap","cursor","fontWeight","onClick","v","borderRadius","background","position","transition","verticalAlign","tabIndex","role","top","left","boxShadow","htmlFor","marginRight","onChange","target","padding","border","fontSize","size","marginLeft","type","min","max","step","Number","index","onSelectPrinting","disabled","href","rel","src","alt","_c","$RefreshReg$"],"sources":["C:/MTG/mtg-pdf-printer/mtg-pdf-printer/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport DeckInput from './components/DeckInput';\nimport CardGrid from './components/CardGrid';\nimport { parseDecklist, fetchMultipleCards, fetchAllPrintings } from './utils/scryfall';\nimport { generatePDF, downloadPDF } from './utils/pdfGenerator';\nimport './App.css';\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [generatingPDF, setGeneratingPDF] = useState(false);\n  const [errors, setErrors] = useState([]);\n  const [success, setSuccess] = useState('');\n  const [selectedPaperSize, setSelectedPaperSize] = useState('letter');\n  const [scale, setScale] = useState(100);\n  const [cropMarks, setCropMarks] = useState(true);\n  const [cutLines, setCutLines] = useState(false);\n  const [skipBasicLands, setSkipBasicLands] = useState(false);\n\n  // Track selected printing for each card (by index)\n  const [selectedPrintings, setSelectedPrintings] = useState({});\n\n  // Paper size options\n  const paperSizes = [\n    { value: 'letter', label: 'Letter (8.5x11.0 in)', width: 8.5, height: 11.0 },\n    { value: 'legal', label: 'Legal (8.5x14.0 in)', width: 8.5, height: 14.0 },\n    { value: 'a4', label: 'A4 (8.27x11.69 in)', width: 8.27, height: 11.69 },\n    { value: 'a3', label: 'A3 (11.69x16.54 in)', width: 11.69, height: 16.54 },\n    { value: 'tabloid', label: 'Tabloid (11x17 in)', width: 11, height: 17 },\n  ];\n\n  const handleDeckSubmit = async (decklistText) => {\n    setLoading(true);\n    setErrors([]);\n    setSuccess('');\n    setCards([]);\n    setSelectedPrintings({});\n\n    try {\n      // Parse the decklist\n      const parsedCards = parseDecklist(decklistText);\n      if (parsedCards.length === 0) {\n        setErrors(['No valid cards found in the decklist. Please check the format.']);\n        setLoading(false);\n        return;\n      }\n\n      // Fetch card data from Scryfall\n      const { results, errors: fetchErrors } = await fetchMultipleCards(parsedCards);\n      if (results.length === 0) {\n        setErrors(['No cards could be found. Please check the card names and try again.']);\n        setLoading(false);\n        return;\n      }\n\n      // For each card, fetch all printings and set up the card object\n      const cardsWithPrintings = await Promise.all(results.map(async (card, idx) => {\n        let printings = [];\n        try {\n          if (card.prints_search_uri) {\n            printings = await fetchAllPrintings(card.prints_search_uri);\n          }\n        } catch (e) {\n          printings = [];\n        }\n        // Default to the originally loaded card\n        const selectedPrinting = printings.find(p => p.set_name === card.set && p.collector_number === card.collectorNumber) || printings[0];\n        const cardWithPrintings = {\n          ...card,\n          printings: printings.map(p => ({\n            id: p.id,\n            set_name: p.set_name,\n            collector_number: p.collector_number,\n            released_at: p.released_at,\n            imageUrl: p.image_uris?.png || p.card_faces?.[0]?.image_uris?.png,\n          })),\n          selectedPrintingId: selectedPrinting ? selectedPrinting.id : null,\n        };\n        console.log('Card with printings:', cardWithPrintings.name, 'printings:', cardWithPrintings.printings.length, cardWithPrintings.printings[0]);\n        return cardWithPrintings;\n      }));\n\n      // Proxy the image URLs for the selected printing\n      const proxiedCards = cardsWithPrintings.map(card => {\n        const selected = card.printings.find(p => p.id === card.selectedPrintingId) || card.printings[0];\n        return {\n          ...card,\n          imageUrl: selected && selected.imageUrl ? `http://localhost:4000/proxy?url=${encodeURIComponent(selected.imageUrl)}` : card.imageUrl,\n        };\n      });\n\n      setCards(proxiedCards);\n\n      if (fetchErrors.length > 0) {\n        setErrors(fetchErrors);\n      } else {\n        setSuccess(`Successfully loaded ${results.length} cards!`);\n      }\n    } catch (error) {\n      setErrors([`Error loading cards: ${error.message}`]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handler for when a user selects a different printing\n  const handleSelectPrinting = (cardIdx, printingId) => {\n    setCards(prevCards => prevCards.map((card, idx) => {\n      if (idx !== cardIdx) return card;\n      const selected = card.printings.find(p => p.id === printingId) || card.printings[0];\n      return {\n        ...card,\n        selectedPrintingId: selected.id,\n        imageUrl: selected && selected.imageUrl\n          ? `http://localhost:4000/proxy?url=${encodeURIComponent(selected.imageUrl)}`\n          : card.imageUrl,\n      };\n    }));\n  };\n\n  const handleGeneratePDF = async () => {\n    if (cards.length === 0) {\n      setErrors(['No cards to generate PDF for. Please load a decklist first.']);\n      return;\n    }\n    setGeneratingPDF(true);\n    setErrors([]);\n    setSuccess('');\n    try {\n      // Find the selected paper size object\n      const paper = paperSizes.find(p => p.value === selectedPaperSize) || paperSizes[0];\n      // Pass paper size and scale to generatePDF\n      const pdfBytes = await generatePDF(cards, paper, scale);\n      downloadPDF(pdfBytes, 'mtg-deck.pdf');\n      setSuccess('PDF generated and downloaded successfully!');\n    } catch (error) {\n      setErrors([`Error generating PDF: ${error.message}`]);\n    } finally {\n      setGeneratingPDF(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <header className=\"app-header\">\n          <h1>MTG PDF Printer</h1>\n          <p>Generate print-ready PDFs from Magic: The Gathering decklists</p>\n        </header>\n\n        <div className=\"card\">\n          <DeckInput\n            onDeckSubmit={handleDeckSubmit}\n            loading={loading}\n            onGeneratePDF={handleGeneratePDF}\n            generatingPDF={generatingPDF}\n            canGeneratePDF={cards.length > 0}\n          />\n          {/* Crop Marks, Cut Lines, and Skip Basic Lands Toggles */}\n          <div className=\"toggle-section\" style={{ marginTop: 16, marginBottom: 8, textAlign: 'center', display: 'flex', alignItems: 'center', justifyContent: 'center', gap: 32 }}>\n            <label style={{ display: 'flex', alignItems: 'center', gap: 8, cursor: 'pointer' }}>\n              <span style={{ fontWeight: 600 }}>Crop marks</span>\n              <div\n                onClick={() => setCropMarks(v => !v)}\n                style={{\n                  width: 40,\n                  height: 22,\n                  borderRadius: 22,\n                  background: cropMarks ? '#8bc34a' : '#bbb',\n                  position: 'relative',\n                  transition: 'background 0.2s',\n                  display: 'inline-block',\n                  verticalAlign: 'middle',\n                  cursor: 'pointer',\n                }}\n                tabIndex={0}\n                role=\"switch\"\n                aria-checked={cropMarks}\n              >\n                <div\n                  style={{\n                    width: 18,\n                    height: 18,\n                    borderRadius: '50%',\n                    background: '#fff',\n                    position: 'absolute',\n                    top: 2,\n                    left: cropMarks ? 20 : 2,\n                    transition: 'left 0.2s',\n                    boxShadow: '0 1px 4px rgba(0,0,0,0.15)'\n                  }}\n                />\n              </div>\n            </label>\n            <label style={{ display: 'flex', alignItems: 'center', gap: 8, cursor: 'pointer' }}>\n              <span style={{ fontWeight: 600 }}>Cut lines</span>\n              <div\n                onClick={() => setCutLines(v => !v)}\n                style={{\n                  width: 40,\n                  height: 22,\n                  borderRadius: 22,\n                  background: cutLines ? '#8bc34a' : '#bbb',\n                  position: 'relative',\n                  transition: 'background 0.2s',\n                  display: 'inline-block',\n                  verticalAlign: 'middle',\n                  cursor: 'pointer',\n                }}\n                tabIndex={0}\n                role=\"switch\"\n                aria-checked={cutLines}\n              >\n                <div\n                  style={{\n                    width: 18,\n                    height: 18,\n                    borderRadius: '50%',\n                    background: '#fff',\n                    position: 'absolute',\n                    top: 2,\n                    left: cutLines ? 20 : 2,\n                    transition: 'left 0.2s',\n                    boxShadow: '0 1px 4px rgba(0,0,0,0.15)'\n                  }}\n                />\n              </div>\n            </label>\n            <label style={{ display: 'flex', alignItems: 'center', gap: 8, cursor: 'pointer' }}>\n              <span style={{ fontWeight: 600 }}>Skip basic lands</span>\n              <div\n                onClick={() => setSkipBasicLands(v => !v)}\n                style={{\n                  width: 40,\n                  height: 22,\n                  borderRadius: 22,\n                  background: skipBasicLands ? '#8bc34a' : '#bbb',\n                  position: 'relative',\n                  transition: 'background 0.2s',\n                  display: 'inline-block',\n                  verticalAlign: 'middle',\n                  cursor: 'pointer',\n                }}\n                tabIndex={0}\n                role=\"switch\"\n                aria-checked={skipBasicLands}\n              >\n                <div\n                  style={{\n                    width: 18,\n                    height: 18,\n                    borderRadius: '50%',\n                    background: '#fff',\n                    position: 'absolute',\n                    top: 2,\n                    left: skipBasicLands ? 20 : 2,\n                    transition: 'left 0.2s',\n                    boxShadow: '0 1px 4px rgba(0,0,0,0.15)'\n                  }}\n                />\n              </div>\n            </label>\n          </div>\n          {/* Paper Size Dropdown */}\n          <div className=\"paper-size-section\" style={{ marginTop: 16, marginBottom: 16, textAlign: 'center', display: 'flex', alignItems: 'center', justifyContent: 'center', gap: 16 }}>\n            <label htmlFor=\"paper-size-select\" style={{ fontWeight: 600, marginRight: 8 }}>Paper Size</label>\n            <select\n              id=\"paper-size-select\"\n              value={selectedPaperSize}\n              onChange={e => setSelectedPaperSize(e.target.value)}\n              style={{ padding: '4px 12px', borderRadius: 6, border: '1px solid #ccc', fontSize: 16 }}\n            >\n              {paperSizes.map(size => (\n                <option key={size.value} value={size.value}>{size.label}</option>\n              ))}\n            </select>\n            <label htmlFor=\"scale-input\" style={{ fontWeight: 600, marginLeft: 24, marginRight: 8 }}>Scale</label>\n            <input\n              id=\"scale-input\"\n              type=\"number\"\n              min={90}\n              max={110}\n              step={1}\n              value={scale}\n              onChange={e => setScale(Number(e.target.value))}\n              style={{ width: 70, padding: '4px 8px', borderRadius: 6, border: '1px solid #ccc', fontSize: 16 }}\n            />\n            <span style={{ marginLeft: 4 }}>%</span>\n          </div>\n        </div>\n\n        {errors.length > 0 && (\n          <div className=\"card\">\n            <div className=\"error\">\n              <h3>Errors:</h3>\n              {errors.map((error, index) => (\n                <p key={index}>{error}</p>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {success && (\n          <div className=\"card\">\n            <div className=\"success\">\n              <p>{success}</p>\n            </div>\n          </div>\n        )}\n\n        {cards.length > 0 && (\n          <div className=\"card\">\n            <div className=\"preview-section\">\n              <h2>Card Preview (3x3 Grid)</h2>\n              <CardGrid cards={cards} loading={loading} onSelectPrinting={handleSelectPrinting} />\n              <div className=\"pdf-actions\">\n                <button\n                  className=\"btn btn-success\"\n                  onClick={handleGeneratePDF}\n                  disabled={generatingPDF || cards.length === 0}\n                >\n                  {generatingPDF ? 'Generating PDF...' : 'Generate PDF'}\n                </button>\n                <div className=\"pdf-info\">\n                  <p>• Print-ready PDF with 9 cards per page</p>\n                  <p>• Standard card size (2.5\" x 3.5\")</p>\n                  <p>• Minimal margins for optimal printing</p>\n                  <p>• No watermarks or branding</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <footer className=\"app-footer\">\n          <div className=\"footer-content\">\n            <p>&copy; 2024 MTG PDF Printer. Made with ❤️ for Magic players.</p>\n            <div className=\"coffee-button\">\n              <a href=\"https://www.buymeacoffee.com/gOZTM9e\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <img \n                  src=\"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee&emoji=&slug=gOZTM9e&button_colour=FFDD00&font_colour=000000&font_family=Poppins&outline_colour=000000&coffee_colour=ffffff\" \n                  alt=\"Buy me a coffee\"\n                />\n              </a>\n            </div>\n          </div>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\MTG\\\\mtg-pdf-printer\\\\mtg-pdf-printer\\\\src\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nconst getSystemTheme = () => window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState(() => {\n    const stored = localStorage.getItem('theme');\n    return stored || 'system';\n  });\n  useEffect(() => {\n    let applied = theme;\n    if (theme === 'system') {\n      applied = getSystemTheme();\n    }\n    document.documentElement.classList.remove('light', 'dark');\n    document.documentElement.classList.add(applied);\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  // Listen for system theme changes if 'system' is selected\n  useEffect(() => {\n    if (theme !== 'system') return;\n    const handler = () => setTheme('system');\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', handler);\n    return () => window.matchMedia('(prefers-color-scheme: dark)').removeEventListener('change', handler);\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      setTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"zPXbUncONyU5l3QWZN/kmxYcBJE=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","ThemeContext","getSystemTheme","window","matchMedia","matches","ThemeProvider","children","_s","theme","setTheme","stored","localStorage","getItem","applied","document","documentElement","classList","remove","add","setItem","handler","addEventListener","removeEventListener","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["C:/MTG/mtg-pdf-printer/mtg-pdf-printer/src/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nconst getSystemTheme = () =>\r\n  window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState(() => {\r\n    const stored = localStorage.getItem('theme');\r\n    return stored || 'system';\r\n  });\r\n\r\n  useEffect(() => {\r\n    let applied = theme;\r\n    if (theme === 'system') {\r\n      applied = getSystemTheme();\r\n    }\r\n    document.documentElement.classList.remove('light', 'dark');\r\n    document.documentElement.classList.add(applied);\r\n    localStorage.setItem('theme', theme);\r\n  }, [theme]);\r\n\r\n  // Listen for system theme changes if 'system' is selected\r\n  useEffect(() => {\r\n    if (theme !== 'system') return;\r\n    const handler = () => setTheme('system');\r\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', handler);\r\n    return () => window.matchMedia('(prefers-color-scheme: dark)').removeEventListener('change', handler);\r\n  }, [theme]);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, setTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => useContext(ThemeContext); "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,MAAMO,cAAc,GAAGA,CAAA,KACrBC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,GAAG,MAAM,GAAG,OAAO;AAE9E,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,MAAM;IACvC,MAAMa,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC5C,OAAOF,MAAM,IAAI,QAAQ;EAC3B,CAAC,CAAC;EAEFd,SAAS,CAAC,MAAM;IACd,IAAIiB,OAAO,GAAGL,KAAK;IACnB,IAAIA,KAAK,KAAK,QAAQ,EAAE;MACtBK,OAAO,GAAGZ,cAAc,CAAC,CAAC;IAC5B;IACAa,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC;IAC1DH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,GAAG,CAACL,OAAO,CAAC;IAC/CF,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAEX,KAAK,CAAC;EACtC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACAZ,SAAS,CAAC,MAAM;IACd,IAAIY,KAAK,KAAK,QAAQ,EAAE;IACxB,MAAMY,OAAO,GAAGA,CAAA,KAAMX,QAAQ,CAAC,QAAQ,CAAC;IACxCP,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACkB,gBAAgB,CAAC,QAAQ,EAAED,OAAO,CAAC;IACrF,OAAO,MAAMlB,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACmB,mBAAmB,CAAC,QAAQ,EAAEF,OAAO,CAAC;EACvG,CAAC,EAAE,CAACZ,KAAK,CAAC,CAAC;EAEX,oBACET,OAAA,CAACC,YAAY,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,KAAK;MAAEC;IAAS,CAAE;IAAAH,QAAA,EAC/CA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACrB,EAAA,CA7BWF,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AA+B1B,OAAO,MAAMyB,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMpC,UAAU,CAACK,YAAY,CAAC;AAAA;AAAC+B,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
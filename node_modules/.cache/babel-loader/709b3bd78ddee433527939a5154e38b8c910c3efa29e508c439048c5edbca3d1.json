{"ast":null,"code":"var _jsxFileName = \"C:\\\\MTG\\\\mtg-pdf-printer\\\\mtg-pdf-printer\\\\src\\\\components\\\\CardGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './CardGrid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardGrid = ({\n  cards,\n  loading\n}) => {\n  _s();\n  const [imgErrors, setImgErrors] = useState([]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading cards...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n  if (!cards || cards.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-cards\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No cards to display. Enter a decklist above to see the preview.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show first 9 cards in the preview grid\n  const previewCards = cards.slice(0, 9);\n  const remainingCards = cards.length - 9;\n  const handleImgError = index => {\n    setImgErrors(prev => {\n      const updated = [...prev];\n      updated[index] = true;\n      return updated;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-grid-container mt-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: previewCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-item\",\n        children: !imgErrors[index] ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.imageUrl,\n          alt: card.name,\n          className: \"card-image\",\n          onError: () => handleImgError(index),\n          onLoad: () => {\n            console.log(`Successfully loaded image for ${card.name}`);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-placeholder\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: card.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), remainingCards > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center my-4 p-2 bg-blue-50 rounded text-blue-700 font-semibold\",\n      children: [\"+ \", remainingCards, \" more cards will be included in the PDF\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-4 p-4 bg-white rounded shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-semibold text-gray-700\",\n        children: [\"Total cards: \", cards.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-semibold text-gray-700\",\n        children: [\"Pages needed: \", Math.ceil(cards.length / 9)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CardGrid, \"jcOv70b+W0XxucEThHUYg09eO80=\");\n_c = CardGrid;\nexport default CardGrid;\nvar _c;\n$RefreshReg$(_c, \"CardGrid\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CardGrid","cards","loading","_s","imgErrors","setImgErrors","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","previewCards","slice","remainingCards","handleImgError","index","prev","updated","map","card","src","imageUrl","alt","name","onError","onLoad","console","log","Math","ceil","_c","$RefreshReg$"],"sources":["C:/MTG/mtg-pdf-printer/mtg-pdf-printer/src/components/CardGrid.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './CardGrid.css';\r\n\r\nconst CardGrid = ({ cards, loading }) => {\r\n  const [imgErrors, setImgErrors] = useState([]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"card-grid-container\">\r\n        <div className=\"loading\">Loading cards...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!cards || cards.length === 0) {\r\n    return (\r\n      <div className=\"card-grid-container\">\r\n        <div className=\"no-cards\">\r\n          <p>No cards to display. Enter a decklist above to see the preview.</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show first 9 cards in the preview grid\r\n  const previewCards = cards.slice(0, 9);\r\n  const remainingCards = cards.length - 9;\r\n\r\n  const handleImgError = (index) => {\r\n    setImgErrors((prev) => {\r\n      const updated = [...prev];\r\n      updated[index] = true;\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-grid-container mt-6\">\r\n      <div className=\"card-grid\">\r\n        {previewCards.map((card, index) => (\r\n          <div key={index} className=\"card-item\">\r\n            {!imgErrors[index] ? (\r\n              <img\r\n                src={card.imageUrl}\r\n                alt={card.name}\r\n                className=\"card-image\"\r\n                onError={() => handleImgError(index)}\r\n                onLoad={() => {\r\n                  console.log(`Successfully loaded image for ${card.name}`);\r\n                }}\r\n              />\r\n            ) : (\r\n              <div className=\"card-placeholder\">\r\n                <span>{card.name}</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n      {remainingCards > 0 && (\r\n        <div className=\"text-center my-4 p-2 bg-blue-50 rounded text-blue-700 font-semibold\">\r\n          + {remainingCards} more cards will be included in the PDF\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"text-center mt-4 p-4 bg-white rounded shadow\">\r\n        <p className=\"font-semibold text-gray-700\">Total cards: {cards.length}</p>\r\n        <p className=\"font-semibold text-gray-700\">Pages needed: {Math.ceil(cards.length / 9)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardGrid; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
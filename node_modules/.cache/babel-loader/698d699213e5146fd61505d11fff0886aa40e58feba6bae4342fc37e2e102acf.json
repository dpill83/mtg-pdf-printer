{"ast":null,"code":"var _jsxFileName = \"C:\\\\MTG\\\\mtg-pdf-printer\\\\mtg-pdf-printer\\\\src\\\\components\\\\CardGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './CardGrid.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CARD_WIDTH = 220; // px\n\nconst CardGrid = ({\n  cards,\n  loading,\n  onSelectPrinting,\n  onPrint,\n  printing\n}) => {\n  _s();\n  const [imgErrors, setImgErrors] = useState([]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading cards...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n  if (!cards || cards.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-cards\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No cards to display. Enter a decklist above to see the preview.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show all cards in the preview grid\n  const previewCards = cards; // no slicing, show all\n\n  const handleImgError = index => {\n    setImgErrors(prev => {\n      const updated = [...prev];\n      updated[index] = true;\n      return updated;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-grid-container mt-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: previewCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-item-wrapper\",\n        style: {\n          width: CARD_WIDTH\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-item\",\n          children: !imgErrors[index] ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: card.imageUrl,\n            alt: card.name,\n            className: \"card-image\",\n            onError: () => handleImgError(index),\n            onLoad: () => {\n              console.log(`Successfully loaded image for ${card.name}`);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-placeholder\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: card.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-controls flex flex-row items-center justify-center mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"card-quantity-badge\",\n            children: card.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), card.printings && card.printings.length > 0 && /*#__PURE__*/_jsxDEV(\"select\", {\n            value: card.selectedPrintingId || card.printings[0].id,\n            onChange: e => onSelectPrinting(index, e.target.value),\n            className: \"card-version-dropdown\",\n            children: card.printings.map(printing => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: printing.id,\n              children: [printing.set_name, \" (\", printing.collector_number, \")\"]\n            }, printing.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-8\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: onPrint,\n        disabled: printing,\n        children: printing ? 'Generating PDF...' : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"Print\",\n            style: {\n              marginRight: 4\n            },\n            children: \"\\uD83D\\uDDA8\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), \"Print\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(CardGrid, \"jcOv70b+W0XxucEThHUYg09eO80=\");\n_c = CardGrid;\nexport default CardGrid;\nvar _c;\n$RefreshReg$(_c, \"CardGrid\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","CARD_WIDTH","CardGrid","cards","loading","onSelectPrinting","onPrint","printing","_s","imgErrors","setImgErrors","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","previewCards","handleImgError","index","prev","updated","map","card","style","width","src","imageUrl","alt","name","onError","onLoad","console","log","quantity","printings","value","selectedPrintingId","id","onChange","e","target","set_name","collector_number","type","onClick","disabled","role","marginRight","_c","$RefreshReg$"],"sources":["C:/MTG/mtg-pdf-printer/mtg-pdf-printer/src/components/CardGrid.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './CardGrid.css';\n\nconst CARD_WIDTH = 220; // px\n\nconst CardGrid = ({ cards, loading, onSelectPrinting, onPrint, printing }) => {\n  const [imgErrors, setImgErrors] = useState([]);\n\n  if (loading) {\n    return (\n      <div className=\"card-grid-container\">\n        <div className=\"loading\">Loading cards...</div>\n      </div>\n    );\n  }\n\n  if (!cards || cards.length === 0) {\n    return (\n      <div className=\"card-grid-container\">\n        <div className=\"no-cards\">\n          <p>No cards to display. Enter a decklist above to see the preview.</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Show all cards in the preview grid\n  const previewCards = cards; // no slicing, show all\n\n  const handleImgError = (index) => {\n    setImgErrors((prev) => {\n      const updated = [...prev];\n      updated[index] = true;\n      return updated;\n    });\n  };\n\n  return (\n    <div className=\"card-grid-container mt-6\">\n      <div className=\"card-grid\">\n        {previewCards.map((card, index) => (\n          <div\n            key={index}\n            className=\"card-item-wrapper\"\n            style={{ width: CARD_WIDTH }}\n          >\n            <div className=\"card-item\">\n              {!imgErrors[index] ? (\n                <img\n                  src={card.imageUrl}\n                  alt={card.name}\n                  className=\"card-image\"\n                  onError={() => handleImgError(index)}\n                  onLoad={() => {\n                    console.log(`Successfully loaded image for ${card.name}`);\n                  }}\n                />\n              ) : (\n                <div className=\"card-placeholder\">\n                  <span>{card.name}</span>\n                </div>\n              )}\n            </div>\n            {/* Controls: dropdown and quantity badge */}\n            <div className=\"card-controls flex flex-row items-center justify-center mt-2\">\n              <span className=\"card-quantity-badge\">{card.quantity}</span>\n              {card.printings && card.printings.length > 0 && (\n                <select\n                  value={card.selectedPrintingId || card.printings[0].id}\n                  onChange={e => onSelectPrinting(index, e.target.value)}\n                  className=\"card-version-dropdown\"\n                >\n                  {card.printings.map((printing) => (\n                    <option key={printing.id} value={printing.id}>\n                      {printing.set_name} ({printing.collector_number})\n                    </option>\n                  ))}\n                </select>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n      {/* Centered Print button at the bottom */}\n      <div className=\"flex justify-center mt-8\">\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={onPrint}\n          disabled={printing}\n        >\n          {printing ? (\n            'Generating PDF...'\n          ) : (\n            <>\n              <span role=\"img\" aria-label=\"Print\" style={{ marginRight: 4 }}>🖨️</span>Print\n            </>\n          )}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CardGrid; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
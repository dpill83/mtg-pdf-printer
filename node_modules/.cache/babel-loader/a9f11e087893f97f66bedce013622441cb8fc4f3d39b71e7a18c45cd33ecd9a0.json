{"ast":null,"code":"var _jsxFileName = \"C:\\\\MTG\\\\mtg-pdf-printer\\\\mtg-pdf-printer\\\\src\\\\components\\\\CardGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './CardGrid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardGrid = ({\n  cards,\n  loading,\n  onSelectPrinting\n}) => {\n  _s();\n  const [imgErrors, setImgErrors] = useState([]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading cards...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n  if (!cards || cards.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-cards\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No cards to display. Enter a decklist above to see the preview.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show first 9 cards in the preview grid\n  const previewCards = cards.slice(0, 9);\n  const remainingCards = cards.length - 9;\n  const handleImgError = index => {\n    setImgErrors(prev => {\n      const updated = [...prev];\n      updated[index] = true;\n      return updated;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-grid-container mt-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: previewCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-item-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-item\",\n          children: !imgErrors[index] ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: card.imageUrl,\n            alt: card.name,\n            className: \"card-image\",\n            onError: () => handleImgError(index),\n            onLoad: () => {\n              console.log(`Successfully loaded image for ${card.name}`);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-placeholder\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: card.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), card.printings && card.printings.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            marginTop: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: card.selectedPrintingId || card.printings[0].id,\n            onChange: e => onSelectPrinting(index, e.target.value),\n            className: \"card-version-dropdown\",\n            children: card.printings.map(printing => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: printing.id,\n              children: [printing.set_name, \" (\", printing.collector_number, \")\"]\n            }, printing.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-sm font-semibold\",\n            children: [\"\\xD7\", card.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), remainingCards > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center my-4 p-2 bg-blue-50 rounded text-blue-700 font-semibold\",\n      children: [\"+ \", remainingCards, \" more cards will be included in the PDF\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-4 p-4 bg-white rounded shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-semibold text-gray-700\",\n        children: [\"Total cards: \", cards.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-semibold text-gray-700\",\n        children: [\"Pages needed: \", Math.ceil(cards.length / 9)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CardGrid, \"jcOv70b+W0XxucEThHUYg09eO80=\");\n_c = CardGrid;\nexport default CardGrid;\nvar _c;\n$RefreshReg$(_c, \"CardGrid\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CardGrid","cards","loading","onSelectPrinting","_s","imgErrors","setImgErrors","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","previewCards","slice","remainingCards","handleImgError","index","prev","updated","map","card","src","imageUrl","alt","name","onError","onLoad","console","log","printings","style","display","alignItems","marginTop","value","selectedPrintingId","id","onChange","e","target","printing","set_name","collector_number","quantity","Math","ceil","_c","$RefreshReg$"],"sources":["C:/MTG/mtg-pdf-printer/mtg-pdf-printer/src/components/CardGrid.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './CardGrid.css';\n\nconst CardGrid = ({ cards, loading, onSelectPrinting }) => {\n  const [imgErrors, setImgErrors] = useState([]);\n\n  if (loading) {\n    return (\n      <div className=\"card-grid-container\">\n        <div className=\"loading\">Loading cards...</div>\n      </div>\n    );\n  }\n\n  if (!cards || cards.length === 0) {\n    return (\n      <div className=\"card-grid-container\">\n        <div className=\"no-cards\">\n          <p>No cards to display. Enter a decklist above to see the preview.</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Show first 9 cards in the preview grid\n  const previewCards = cards.slice(0, 9);\n  const remainingCards = cards.length - 9;\n\n  const handleImgError = (index) => {\n    setImgErrors((prev) => {\n      const updated = [...prev];\n      updated[index] = true;\n      return updated;\n    });\n  };\n\n  return (\n    <div className=\"card-grid-container mt-6\">\n      <div className=\"card-grid\">\n        {previewCards.map((card, index) => (\n          <div key={index} className=\"card-item-wrapper\">\n            <div className=\"card-item\">\n              {!imgErrors[index] ? (\n                <img\n                  src={card.imageUrl}\n                  alt={card.name}\n                  className=\"card-image\"\n                  onError={() => handleImgError(index)}\n                  onLoad={() => {\n                    console.log(`Successfully loaded image for ${card.name}`);\n                  }}\n                />\n              ) : (\n                <div className=\"card-placeholder\">\n                  <span>{card.name}</span>\n                </div>\n              )}\n            </div>\n            {/* Dropdown and quantity badge, aligned horizontally */}\n            {card.printings && card.printings.length > 0 && (\n              <div style={{ display: 'flex', alignItems: 'center', marginTop: 8 }}>\n                <select\n                  value={card.selectedPrintingId || card.printings[0].id}\n                  onChange={e => onSelectPrinting(index, e.target.value)}\n                  className=\"card-version-dropdown\"\n                >\n                  {card.printings.map((printing) => (\n                    <option key={printing.id} value={printing.id}>\n                      {printing.set_name} ({printing.collector_number})\n                    </option>\n                  ))}\n                </select>\n                <span className=\"ml-2 text-sm font-semibold\">Ã—{card.quantity}</span>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n      \n      {remainingCards > 0 && (\n        <div className=\"text-center my-4 p-2 bg-blue-50 rounded text-blue-700 font-semibold\">\n          + {remainingCards} more cards will be included in the PDF\n        </div>\n      )}\n      \n      <div className=\"text-center mt-4 p-4 bg-white rounded shadow\">\n        <p className=\"font-semibold text-gray-700\">Total cards: {cards.length}</p>\n        <p className=\"font-semibold text-gray-700\">Pages needed: {Math.ceil(cards.length / 9)}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default CardGrid; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}